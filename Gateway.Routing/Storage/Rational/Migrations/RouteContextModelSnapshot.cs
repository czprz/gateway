// <auto-generated />
using System;
using Gateway.Routing.Storage.Rational;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gateway.Routing.Migrations
{
    [DbContext(typeof(RouteContext))]
    partial class RouteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.HeaderMatchDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteConfigDbId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteConfigDbId");

                    b.ToTable("HeaderMatches");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.HeaderMatchValueDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HeaderMatchDbId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderMatchDbId");

                    b.ToTable("HeaderMatchValues");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.HostDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteConfigDbId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteConfigDbId");

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.MethodDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteConfigDbId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteConfigDbId");

                    b.ToTable("Methods");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.QueryParameterMatchDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteConfigDbId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteConfigDbId");

                    b.ToTable("QueryParameterMatches");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.QueryParameterMatchValueDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("QueryParameterMatchDbId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QueryParameterMatchDbId");

                    b.ToTable("QueryParameterMatchValues");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.RouteConfigDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Audience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoadBalancingPolicy")
                        .HasColumnType("int");

                    b.Property<int>("MatchHashCode")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scopes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("UseAuthentication")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("RouteConfigs");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.UpstreamDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthProbeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteConfigDbId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteConfigDbId");

                    b.ToTable("Upstreams");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.HeaderMatchDb", b =>
                {
                    b.HasOne("Gateway.Routing.Storage.Rational.Models.RouteConfigDb", null)
                        .WithMany("Headers")
                        .HasForeignKey("RouteConfigDbId");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.HeaderMatchValueDb", b =>
                {
                    b.HasOne("Gateway.Routing.Storage.Rational.Models.HeaderMatchDb", null)
                        .WithMany("Values")
                        .HasForeignKey("HeaderMatchDbId");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.HostDb", b =>
                {
                    b.HasOne("Gateway.Routing.Storage.Rational.Models.RouteConfigDb", null)
                        .WithMany("Hosts")
                        .HasForeignKey("RouteConfigDbId");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.MethodDb", b =>
                {
                    b.HasOne("Gateway.Routing.Storage.Rational.Models.RouteConfigDb", null)
                        .WithMany("Methods")
                        .HasForeignKey("RouteConfigDbId");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.QueryParameterMatchDb", b =>
                {
                    b.HasOne("Gateway.Routing.Storage.Rational.Models.RouteConfigDb", null)
                        .WithMany("QueryParameters")
                        .HasForeignKey("RouteConfigDbId");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.QueryParameterMatchValueDb", b =>
                {
                    b.HasOne("Gateway.Routing.Storage.Rational.Models.QueryParameterMatchDb", null)
                        .WithMany("Values")
                        .HasForeignKey("QueryParameterMatchDbId");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.UpstreamDb", b =>
                {
                    b.HasOne("Gateway.Routing.Storage.Rational.Models.RouteConfigDb", null)
                        .WithMany("Upstreams")
                        .HasForeignKey("RouteConfigDbId");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.HeaderMatchDb", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.QueryParameterMatchDb", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("Gateway.Routing.Storage.Rational.Models.RouteConfigDb", b =>
                {
                    b.Navigation("Headers");

                    b.Navigation("Hosts");

                    b.Navigation("Methods");

                    b.Navigation("QueryParameters");

                    b.Navigation("Upstreams");
                });
#pragma warning restore 612, 618
        }
    }
}
